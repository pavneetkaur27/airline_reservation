/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.sql.Time;

/**
 *
 * @author Pavneet
 */
public class TimePanel1 extends javax.swing.JPanel {

    /**
     * Creates new form TimePanel
     */
    private int hr;
    private int min;

    public TimePanel1() {
        initComponents();
        jcbHour.removeAllItems();
        jcbMinute.removeAllItems();
        jcbHour.addItem("Hour");
        jcbMinute.addItem("Minute");
        for (hr = 0; hr < 24; hr++) {
            if (hr >= 0 && hr < 10) {
                jcbHour.addItem("0" + hr);
            } else {
                jcbHour.addItem(hr);
            }
        }
        for (min = 0; min < 60; min++) {
            if (min >= 0 && min < 10) {
                jcbMinute.addItem("0" + min);
            } else {
                jcbMinute.addItem(min);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbMinute = new javax.swing.JComboBox();
        jcbHour = new javax.swing.JComboBox();

        jcbMinute.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbMinute.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbHour.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jcbHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jcbHour, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbMinute, 0, 105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jcbHour, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
            .addComponent(jcbMinute)
        );
    }// </editor-fold>//GEN-END:initComponents

    public Time getSelectedTime() {
        Time time = null;
        try {
            int h = Integer.parseInt(jcbHour.getSelectedItem().toString());
            int m = Integer.parseInt(jcbMinute.getSelectedItem().toString());
            String value = h + ":" + m + ":" + 0;
            time = Time.valueOf(value);
        } catch (Exception ex) {
        }
        return time;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jcbHour;
    private javax.swing.JComboBox jcbMinute;
    // End of variables declaration//GEN-END:variables

    void setTime(Time departuretime) {
        try {
            String[] values = departuretime.toString().split(":");
            int h = Integer.parseInt(values[0]);
            int m = Integer.parseInt(values[1]);
            for (int i = 1; i < jcbHour.getItemCount(); i++) {
                int hr = Integer.parseInt(jcbHour.getItemAt(i).toString());
                if (hr == h) {
                    jcbHour.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 1; i < jcbMinute.getItemCount(); i++) {
                int min = Integer.parseInt(jcbMinute.getItemAt(i).toString());
                if (min == m) {
                    jcbMinute.setSelectedIndex(i);
                    break;
                }
            }
        } catch (Exception ex) {
        }
    }

}
